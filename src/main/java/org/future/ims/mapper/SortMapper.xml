<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.future.ims.mapper.SortMapper" >

    <resultMap id="BaseResultMap" type="org.future.ims.pojo.Sort" >
        <result column="student_name" property="studentName" jdbcType="VARCHAR" />
        <result column="allscore" property="allscore" jdbcType="REAL" />
        <result column="grades" property="grades" jdbcType="VARCHAR" />
        <result column="int_semester" property="intSemester" jdbcType="VARCHAR" />
        <result column="student_id" property="studentId" jdbcType="VARCHAR" />
    </resultMap>

	<select id="selectByStudentIdAndSemester" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from sort where student_id = #{0} and int_semester = #{1}
	</select>
	
	<select id="selectByClassAndSemester" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from sort where grades = #{0} and int_semester = #{1}
	</select>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        student_name, allscore, grades, int_semester, student_id
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.future.ims.pojo.SortExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from sort
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <delete id="deleteByExample" parameterType="org.future.ims.pojo.SortExample" >
        delete from sort
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="org.future.ims.pojo.Sort" >
        insert into sort (student_name, allscore, grades, 
            int_semester, student_id)
        values (#{studentName,jdbcType=VARCHAR}, #{allscore,jdbcType=REAL}, #{grades,jdbcType=VARCHAR}, 
            #{intSemester,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="org.future.ims.pojo.Sort" >
        insert into sort
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="studentName != null" >
                student_name,
            </if>
            <if test="allscore != null" >
                allscore,
            </if>
            <if test="grades != null" >
                grades,
            </if>
            <if test="intSemester != null" >
                int_semester,
            </if>
            <if test="studentId != null" >
                student_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="studentName != null" >
                #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="allscore != null" >
                #{allscore,jdbcType=REAL},
            </if>
            <if test="grades != null" >
                #{grades,jdbcType=VARCHAR},
            </if>
            <if test="intSemester != null" >
                #{intSemester,jdbcType=VARCHAR},
            </if>
            <if test="studentId != null" >
                #{studentId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="org.future.ims.pojo.SortExample" resultType="java.lang.Integer" >
        select count(*) from sort
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update sort
        <set >
            <if test="record.studentName != null" >
                student_name = #{record.studentName,jdbcType=VARCHAR},
            </if>
            <if test="record.allscore != null" >
                allscore = #{record.allscore,jdbcType=REAL},
            </if>
            <if test="record.grades != null" >
                grades = #{record.grades,jdbcType=VARCHAR},
            </if>
            <if test="record.intSemester != null" >
                int_semester = #{record.intSemester,jdbcType=VARCHAR},
            </if>
            <if test="record.studentId != null" >
                student_id = #{record.studentId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update sort
        set student_name = #{record.studentName,jdbcType=VARCHAR},
            allscore = #{record.allscore,jdbcType=REAL},
            grades = #{record.grades,jdbcType=VARCHAR},
            int_semester = #{record.intSemester,jdbcType=VARCHAR},
            student_id = #{record.studentId,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
</mapper>